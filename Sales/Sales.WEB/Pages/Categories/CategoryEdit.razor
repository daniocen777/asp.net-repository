@page "/categories/edit/{Id:int}"

<!-- Inyecciones necesarias -->
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService

<h3>Editar Categoría</h3>
@if (_category is null)
{
    <p>Cargando...</p>
}
else
{
    <CategoryForm @ref="_categoryForm" Category="_category" OnValidSubmit="EditAsync" ReturnAction="Return" />
}

@code {
    private Category? _category;

    // Referenciar formulario
    private CategoryForm _categoryForm;

    [Parameter]
    public int Id { get; set; }

    // Recuperar datos
    protected override async Task OnInitializedAsync()
    {
        var responseHttp = await repository.Get<Category>($"/api/categories/{Id}");
        if (responseHttp.Error)
        {
            if (responseHttp.HttpResponseMessage.StatusCode == HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("/categories");
                return;
            }

            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }

        _category = responseHttp.Response;
    }

    private async Task EditAsync()
    {
        var responseHttp = await repository.Put($"/api/categories", _category);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }

        Return();
    }

    private void Return()
    {
        _categoryForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("/categories");
    }
}
